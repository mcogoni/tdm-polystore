FROM crs4/hadoop:3.2.0-ubuntu AS build-tiledb

ARG tileDB_ref="35a9f29"
ARG tileDB_py_ref="2349cb3"

ENV DEBIAN_FRONTEND=noninteractive

RUN \
    apt-get update && \
    apt-get install -y --no-install-recommends \
      cmake \
      gcc \
      libeccodes-dev \
      libgdal-dev \
      libudunits2-dev \
      m4 \
      g++ \
      git \
      make \
      python3-dev \
      python3-pip \
      wget && \
    apt-get -y clean && apt-get autoremove -y && rm -rf /var/lib/{apt,dpkg,cache,log}/ /tmp/* /var/tmp/*

#RUN git clone --depth 1 --single-branch --branch ${tileDB_rev} https://github.com/TileDB-Inc/TileDB.git && \
RUN cd /root && \
    git clone --single-branch --branch dev https://github.com/TileDB-Inc/TileDB.git && \
    cd TileDB && \
    git checkout ${tileDB_ref} && \
    mkdir build && \
    cd build && \
    ../bootstrap --prefix=/usr/local --enable-hdfs --enable-verbose && \
    make  -j 4 && \
    make install-tiledb

#RUN git clone --depth 1 --single-branch --branch ${tileDB_py_rev} https://github.com/TileDB-Inc/TileDB-Py.git && \
RUN cd /root && \
    git clone --single-branch --branch dev https://github.com/TileDB-Inc/TileDB-Py.git && \
    cd TileDB-Py && \
    git checkout ${tileDB_py_ref} &&  \
    pip3 install --no-cache-dir setuptools && \
    pip3 install --no-cache-dir -r requirements_dev.txt && \
    python3 setup.py build_ext --inplace && \
    python3 setup.py install

FROM crs4/hadoop:3.2.0-ubuntu AS tiledb

COPY --from=build-tiledb /usr/local/include/tiledb /usr/include/tiledb
COPY --from=build-tiledb /usr/local/lib/libtiledb.so /usr/local/lib/
COPY --from=build-tiledb /usr/local/lib/python3.6/dist-packages/tiledb* /usr/local/lib/python3.6/dist-packages/
COPY --from=build-tiledb /root/TileDB-Py/requirements.txt /root/

ENV DEBIAN_FRONTEND=noninteractive

RUN apt-get update && \
    apt-get install -y --no-install-recommends \
      gdal-bin \
      netcdf-bin \
      python3 \
      python3-cartopy  \
      python3-easydev  \
      python3-gdal \
      python3-matplotlib \
      python3-numpy \
      python3-pip \
      python3-psycopg2 \
      python3-pyproj \
      python3-setuptools \
      python3-wget \
      python3-wheel \
      python3-xarray && \
    apt-get clean && apt-get autoremove -y && rm -rf /var/lib/{apt,dpkg,cache,log}/ /tmp/* /var/tmp/*

RUN pip3 install --no-cache-dir -r /root/requirements.txt

RUN pip3 install --no-cache-dir \
      ckanapi \
      folium \
      jupyter \
      colormap


RUN CLASSPATH=`/opt/hadoop/bin/hadoop classpath --glob` && \
    echo "export CLASSPATH=\"${CLASSPATH}\"" >> /etc/profile.d/hadoop.sh && \
    echo "export HADOOP_HOME=/opt/hadoop" >> /etc/profile.d/hadoop.sh && \
    echo  /usr/lib/jvm/jre/lib/amd64/server > /etc/ld.so.conf.d/jvm.conf && \
    ldconfig

COPY core-site.xml /opt/hadoop/etc/hadoop/core-site.xml

RUN useradd -m jupyter
RUN \
  mkdir -p /home/jupyter/notebooks && \
  chmod a+r /opt/hadoop/etc/hadoop/core-site.xml && \
  chown --recursive jupyter /home/jupyter && \
  find /home/jupyter -type d -print0 | xargs -0 chmod 777 && \
  find /home/jupyter -type f -print0 | xargs -0 chmod 666

USER jupyter
WORKDIR /home/jupyter/notebooks
ENV HOME=/home/jupyter/

EXPOSE 8080
ENTRYPOINT ["/bin/bash", "-l", "-c", "echo UID=${UID}; jupyter notebook --ip=0.0.0.0 --port=8080"]
